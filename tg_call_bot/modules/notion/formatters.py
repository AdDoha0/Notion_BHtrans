def escape_md(text: str) -> str:
    if text is None:
        return ""
    for ch in r"\_*[]()~`>#+-=|{}.!":
        text = text.replace(ch, f"\\{ch}")
    return text

def driver_brief(info: dict) -> str:
    name = escape_md(info.get("name",""))
    parts = [f"üë§ –í—ã–±—Ä–∞–Ω –≤–æ–¥–∏—Ç–µ–ª—å: *{name}*"]
    if info.get("status"): parts.append(f"üìä –°—Ç–∞—Ç—É—Å: {escape_md(info['status'])}")
    if info.get("number"): parts.append(f"üìû –ù–æ–º–µ—Ä: {escape_md(info['number'])}")
    if info.get("about_driver"):
        about = info["about_driver"]
        parts.append(f"‚ÑπÔ∏è –û –≤–æ–¥–∏—Ç–µ–ª–µ: {escape_md(about[:100] + ('...' if len(about)>100 else ''))}")
    if info.get("date"): parts.append(f"üìÖ –î–∞—Ç–∞: {escape_md(info['date'])}")
    if "trailer" in info: parts.append("üöõ –ü—Ä–∏—Ü–µ–ø: –î–∞" if info["trailer"] else "üöõ –ü—Ä–∏—Ü–µ–ø: –ù–µ—Ç")
    if info.get("notes"):
        notes = info["notes"]
        preview = notes[:200] + ("..." if len(notes) > 200 else "")
        parts.append("\nüìù –¢–µ–∫—É—â–∏–µ –∑–∞–º–µ—Ç–∫–∏:")
        parts.append(escape_md(preview))
    parts.append("\nüéôÔ∏è –¢–µ–ø–µ—Ä—å –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –∑–∞–ø–∏—Å—å –∑–≤–æ–Ω–∫–∞ (–∞—É–¥–∏–æ) –∏–ª–∏ —Ç–µ–∫—Å—Ç–æ–≤—ã–π –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π:")
    return "\n".join(parts)

def driver_full(info: dict, comments: list[dict] | None) -> str:
    name = escape_md(info.get("name",""))
    txt = [f"üë§ *{name}*\n", f"üÜî `{escape_md(info.get('id',''))[:8]}...`"]
    if info.get("status"): txt.append(f"üìä –°—Ç–∞—Ç—É—Å: {escape_md(info['status'])}")
    if info.get("about_driver"): txt.append(f"‚ÑπÔ∏è –û –≤–æ–¥–∏—Ç–µ–ª–µ: {escape_md(info['about_driver'])}")
    if info.get("number"): txt.append(f"üìû –ù–æ–º–µ—Ä: {escape_md(info['number'])}")
    if info.get("date"): txt.append(f"üìÖ –î–∞—Ç–∞: {escape_md(info['date'])}")
    txt.append(f"üöõ –ü—Ä–∏—Ü–µ–ø: {'–î–∞' if info.get('trailer') else '–ù–µ—Ç'}")
    if info.get("notes"):
        txt.append("\nüìù *–ó–∞–º–µ—Ç–∫–∏:*")
        txt.append(escape_md(info["notes"]))
    if comments:
        txt.append(f"\nüí¨ *–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ ({len(comments)}):*")
        for c in comments[-3:]:
            created = c.get("created_time","")[:16].replace("T"," ")
            body = c.get("text","")
            body = body[:100] + ("..." if len(body) > 100 else "")
            txt.append(f"‚Ä¢ [{created or '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ'}] {escape_md(body)}")
        if len(comments) > 3:
            txt.append(f"... –∏ –µ—â–µ {len(comments)-3} –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤")
    else:
        txt.append("\nüí¨ –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç")
    return "\n".join(txt)
