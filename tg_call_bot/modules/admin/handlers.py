from aiogram import Router
from aiogram.filters import Command
from aiogram.types import Message, InlineKeyboardMarkup, InlineKeyboardButton, CallbackQuery
from aiogram.fsm.context import FSMContext
import logging
import psutil
import os
from datetime import datetime

from share.config import ADMINS
from share.promt_utils import (
    get_main_prompt, get_response_template, save_main_prompt, save_response_template,
    get_summary_main_prompt, get_summary_template, save_summary_main_prompt, save_summary_template
)
from .states import AdminStates

logger = logging.getLogger(__name__)

router = Router()


# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–¥–º–∏–Ω—Å–∫–∏—Ö –ø—Ä–∞–≤
def is_admin(user_id: int) -> bool:
    return user_id in ADMINS

# –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –∞–¥–º–∏–Ω –ø–∞–Ω–µ–ª–∏
def get_admin_keyboard():
    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [
            InlineKeyboardButton(text="üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞", callback_data="admin_stats"),
            InlineKeyboardButton(text="üíª –°–∏—Å—Ç–µ–º–∞", callback_data="admin_system")
        ],
        [
            InlineKeyboardButton(text="ü§ñ –ü—Ä–æ–º—Ç", callback_data="admin_prompt"),
            InlineKeyboardButton(text="üìã –õ–æ–≥–∏", callback_data="admin_logs")
        ],
        [
            InlineKeyboardButton(text="‚ùå –ó–∞–∫—Ä—ã—Ç—å", callback_data="admin_close")
        ]
    ])
    return keyboard

# –ú–µ–Ω—é —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—Ä–æ–º—Ç–æ–º
def get_prompt_keyboard():
    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [
            InlineKeyboardButton(text="üîç –ê–Ω–∞–ª–∏–∑ –∑–≤–æ–Ω–∫–æ–≤", callback_data="admin_analyze_menu")
        ],
        [
            InlineKeyboardButton(text="üë§ –ü—Ä–æ—Ñ–∏–ª—å –≤–æ–¥–∏—Ç–µ–ª—è", callback_data="admin_summary_menu")
        ],
        [
            InlineKeyboardButton(text="üîô –ù–∞–∑–∞–¥", callback_data="admin_back")
        ]
    ])
    return keyboard

def get_analyze_menu_keyboard():
    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [
            InlineKeyboardButton(text="üëÅÔ∏è –¢–µ–∫—É—â–∏–π –ø—Ä–æ–º—Ç", callback_data="admin_prompt_view"),
            InlineKeyboardButton(text="üëÅÔ∏è –¢–µ–∫—É—â–∏–π —à–∞–±–ª–æ–Ω", callback_data="admin_template_view")
        ],
        [
            InlineKeyboardButton(text="‚úèÔ∏è –ò–∑–º–µ–Ω–∏—Ç—å –ø—Ä–æ–º—Ç", callback_data="admin_prompt_main"),
            InlineKeyboardButton(text="‚úèÔ∏è –ò–∑–º–µ–Ω–∏—Ç—å —à–∞–±–ª–æ–Ω", callback_data="admin_prompt_template")
        ],
        [
            InlineKeyboardButton(text="üîô –ù–∞–∑–∞–¥", callback_data="admin_prompt")
        ]
    ])
    return keyboard

def get_summary_menu_keyboard():
    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [
            InlineKeyboardButton(text="üëÅÔ∏è –¢–µ–∫—É—â–∏–π –ø—Ä–æ–º—Ç", callback_data="admin_summary_prompt_view"),
            InlineKeyboardButton(text="üëÅÔ∏è –¢–µ–∫—É—â–∏–π —à–∞–±–ª–æ–Ω", callback_data="admin_summary_template_view")
        ],
        [
            InlineKeyboardButton(text="‚úèÔ∏è –ò–∑–º–µ–Ω–∏—Ç—å –ø—Ä–æ–º—Ç", callback_data="admin_summary_prompt_main"),
            InlineKeyboardButton(text="‚úèÔ∏è –ò–∑–º–µ–Ω–∏—Ç—å —à–∞–±–ª–æ–Ω", callback_data="admin_summary_prompt_template")
        ],
        [
            InlineKeyboardButton(text="üîô –ù–∞–∑–∞–¥", callback_data="admin_prompt")
        ]
    ])
    return keyboard

@router.message(Command("admin"))
async def admin_panel(message: Message):
    """–ì–ª–∞–≤–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞ –∞–¥–º–∏–Ω –ø–∞–Ω–µ–ª–∏"""
    if not is_admin(message.from_user.id):
        await message.answer("‚ùå –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞ –∫ –∞–¥–º–∏–Ω –ø–∞–Ω–µ–ª–∏.")
        return
    
    text = f"""
üîß <b>–ê–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å</b>

–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, {message.from_user.first_name}!
–í—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ:
    """
    
    await message.answer(text, reply_markup=get_admin_keyboard())

@router.callback_query(lambda c: c.data.startswith("admin_"))
async def admin_callback_handler(callback: CallbackQuery, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–æ–∫ –∞–¥–º–∏–Ω –ø–∞–Ω–µ–ª–∏"""
    if not is_admin(callback.from_user.id):
        await callback.answer("‚ùå –ù–µ—Ç –¥–æ—Å—Ç—É–ø–∞")
        return
    
    action = callback.data
    
    if action == "admin_stats":
        await show_stats(callback)
    elif action == "admin_system":
        await show_system_info(callback)
    elif action == "admin_broadcast":
        await start_broadcast(callback, state)
    elif action == "admin_logs":
        await show_logs(callback)
    elif action == "admin_prompt":
        await show_prompt_menu(callback)
    elif action == "admin_close":
        await callback.message.delete()
    elif action == "admin_back":
        await show_main_menu(callback)
    elif action == "admin_prompt_main":
        await edit_main_prompt(callback, state)
    elif action == "admin_prompt_template":
        await edit_response_template(callback, state)
    elif action == "admin_prompt_view":
        await view_current_prompt(callback)
    elif action == "admin_template_view":
        await view_current_template(callback)
    elif action == "admin_analyze_menu":
        await show_analyze_menu(callback)
    elif action == "admin_summary_menu":
        await show_summary_menu(callback)
    elif action == "admin_summary_prompt_view":
        await view_current_summary_prompt(callback)
    elif action == "admin_summary_template_view":
        await view_current_summary_template(callback)
    elif action == "admin_summary_prompt_main":
        await edit_summary_main_prompt(callback, state)
    elif action == "admin_summary_prompt_template":
        await edit_summary_response_template(callback, state)

async def show_stats(callback: CallbackQuery):
    """–ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –±–æ—Ç–∞"""
    # –ë–∞–∑–æ–≤–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
    uptime = datetime.now() - datetime.fromtimestamp(psutil.boot_time())
    
    text = f"""
üìä <b>–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –±–æ—Ç–∞</b>

‚è∞ –í—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã —Å–∏—Å—Ç–µ–º—ã: {uptime.days} –¥–Ω–µ–π, {uptime.seconds//3600} —á–∞—Å–æ–≤
üë• –ê–¥–º–∏–Ω–æ–≤ –≤ —Å–∏—Å—Ç–µ–º–µ: {len(ADMINS)}
üìà –°—Ç–∞—Ç—É—Å: –ê–∫—Ç–∏–≤–µ–Ω
    """
    
    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="üîô –ù–∞–∑–∞–¥", callback_data="admin_back")]
    ])
    
    await callback.message.edit_text(text, reply_markup=keyboard)

async def show_system_info(callback: CallbackQuery):
    """–ü–æ–∫–∞–∑–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–∏—Å—Ç–µ–º–µ"""
    # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–∏—Å—Ç–µ–º–µ
    cpu_percent = psutil.cpu_percent(interval=1)
    memory = psutil.virtual_memory()
    disk = psutil.disk_usage('/')
    
    text = f"""
üíª <b>–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–∏—Å—Ç–µ–º–µ</b>

üñ•Ô∏è CPU: {cpu_percent}%
üß† RAM: {memory.percent}% ({memory.used//1024//1024} MB / {memory.total//1024//1024} MB)
üíæ –î–∏—Å–∫: {disk.percent}% ({disk.used//1024//1024//1024} GB / {disk.total//1024//1024//1024} GB)
üêç Python: {os.sys.version.split()[0]}
    """
    
    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="üîÑ –û–±–Ω–æ–≤–∏—Ç—å", callback_data="admin_system")],
        [InlineKeyboardButton(text="üîô –ù–∞–∑–∞–¥", callback_data="admin_back")]
    ])
    
    await callback.message.edit_text(text, reply_markup=keyboard)

async def start_broadcast(callback: CallbackQuery, state: FSMContext):
    """–ù–∞—á–∞—Ç—å –ø—Ä–æ—Ü–µ—Å—Å —Ä–∞—Å—Å—ã–ª–∫–∏"""
    text = """
üì¢ <b>–†–∞—Å—Å—ã–ª–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π</b>

–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ, –∫–æ—Ç–æ—Ä–æ–µ –Ω—É–∂–Ω–æ —Ä–∞–∑–æ—Å–ª–∞—Ç—å –≤—Å–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º.
–î–ª—è –æ—Ç–º–µ–Ω—ã –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ /cancel
    """
    
    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="‚ùå –û—Ç–º–µ–Ω–∞", callback_data="admin_back")]
    ])
    
    await callback.message.edit_text(text, reply_markup=keyboard)
    await state.set_state(AdminStates.waiting_for_broadcast)

@router.message(AdminStates.waiting_for_broadcast)
async def process_broadcast(message: Message, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è —Ä–∞—Å—Å—ã–ª–∫–∏"""
    if not is_admin(message.from_user.id):
        return
    
    # –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –ª–æ–≥–∏–∫—É —Ä–∞—Å—Å—ã–ª–∫–∏
    # –ü–æ–∫–∞ —á—Ç–æ –ø—Ä–æ—Å—Ç–æ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ–º –ø–æ–ª—É—á–µ–Ω–∏–µ
    await message.answer(f"‚úÖ –°–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è —Ä–∞—Å—Å—ã–ª–∫–∏ –ø–æ–ª—É—á–µ–Ω–æ:\n\n{message.text}")
    await message.answer("‚ÑπÔ∏è –§—É–Ω–∫—Ü–∏—è –º–∞—Å—Å–æ–≤–æ–π —Ä–∞—Å—Å—ã–ª–∫–∏ –±—É–¥–µ—Ç —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω–∞ –≤ —Å–ª–µ–¥—É—é—â–∏—Ö –≤–µ—Ä—Å–∏—è—Ö.")
    
    await state.clear()

@router.message(Command("cancel"))
async def cancel_admin_action(message: Message, state: FSMContext):
    """–û—Ç–º–µ–Ω–∞ —Ç–µ–∫—É—â–µ–≥–æ –∞–¥–º–∏–Ω—Å–∫–æ–≥–æ –¥–µ–π—Å—Ç–≤–∏—è"""
    if not is_admin(message.from_user.id):
        return
    
    current_state = await state.get_state()
    if current_state:
        await state.clear()
        await message.answer("‚ùå –î–µ–π—Å—Ç–≤–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ.")
    else:
        await message.answer("‚ÑπÔ∏è –ù–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –¥–µ–π—Å—Ç–≤–∏–π –¥–ª—è –æ—Ç–º–µ–Ω—ã.")

async def show_logs(callback: CallbackQuery):
    """–ü–æ–∫–∞–∑–∞—Ç—å –ø–æ—Å–ª–µ–¥–Ω–∏–µ –ª–æ–≥–∏"""
    text = """
üìã <b>–°–∏—Å—Ç–µ–º–Ω—ã–µ –ª–æ–≥–∏</b>

üü¢ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω —É—Å–ø–µ—à–Ω–æ
üîÑ –ü–æ—Å–ª–µ–¥–Ω—è—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å: —Å–µ–π—á–∞—Å
üìä –û–±—Ä–∞–±–æ—Ç–∞–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–π: –∞–∫—Ç–∏–≤–Ω–æ

‚ÑπÔ∏è –î–µ—Ç–∞–ª—å–Ω—ã–µ –ª–æ–≥–∏ –¥–æ—Å—Ç—É–ø–Ω—ã –≤ –∫–æ–Ω—Å–æ–ª–∏ —Å–µ—Ä–≤–µ—Ä–∞.
    """
    
    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="üîô –ù–∞–∑–∞–¥", callback_data="admin_back")]
    ])
    
    await callback.message.edit_text(text, reply_markup=keyboard)

async def show_main_menu(callback: CallbackQuery):
    """–ü–æ–∫–∞–∑–∞—Ç—å –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –∞–¥–º–∏–Ω –ø–∞–Ω–µ–ª–∏"""
    text = f"""
üîß <b>–ê–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å</b>

–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, {callback.from_user.first_name}!
–í—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ:
    """
    
    await callback.message.edit_text(text, reply_markup=get_admin_keyboard())

async def show_prompt_menu(callback: CallbackQuery):
    """–ü–æ–∫–∞–∑–∞—Ç—å –º–µ–Ω—é —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—Ä–æ–º—Ç–æ–º"""
    text = """
ü§ñ <b>–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–º—Ç–æ–º</b>

–í—ã–±–µ—Ä–∏—Ç–µ —á—Ç–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å:
‚Ä¢ <b>–û—Å–Ω–æ–≤–Ω–æ–π –ø—Ä–æ–º—Ç</b> - –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –∏ –ø—Ä–∞–≤–∏–ª–∞ –¥–ª—è AI
‚Ä¢ <b>–®–∞–±–ª–æ–Ω –æ—Ç–≤–µ—Ç–∞</b> - —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –æ—Ç—á–µ—Ç–∞

–ò–ª–∏ –ø–æ—Å–º–æ—Ç—Ä–∏—Ç–µ —Ç–µ–∫—É—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏.
    """
    
    await callback.message.edit_text(text, reply_markup=get_prompt_keyboard())

async def edit_main_prompt(callback: CallbackQuery, state: FSMContext):
    """–ù–∞—á–∞—Ç—å —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –ø—Ä–æ–º—Ç–∞"""
    current_prompt = get_main_prompt()
    
    text = f"""
üìù <b>–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –ø—Ä–æ–º—Ç–∞</b>

<b>–¢–µ–∫—É—â–∏–π –ø—Ä–æ–º—Ç:</b>
<code>{current_prompt}</code>

–û—Ç–ø—Ä–∞–≤—å—Ç–µ –Ω–æ–≤—ã–π –ø—Ä–æ–º—Ç —Å–ª–µ–¥—É—é—â–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ–º.
–î–ª—è –æ—Ç–º–µ–Ω—ã –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ /cancel
    """
    
    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="‚ùå –û—Ç–º–µ–Ω–∞", callback_data="admin_prompt")]
    ])
    
    await callback.message.edit_text(text, reply_markup=keyboard)
    await state.set_state(AdminStates.waiting_for_main_prompt)

async def edit_response_template(callback: CallbackQuery, state: FSMContext):
    """–ù–∞—á–∞—Ç—å —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —à–∞–±–ª–æ–Ω–∞ –æ—Ç–≤–µ—Ç–∞"""
    current_template = get_response_template()
    
    text = f"""
üìã <b>–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —à–∞–±–ª–æ–Ω–∞ –æ—Ç–≤–µ—Ç–∞</b>

<b>–¢–µ–∫—É—â–∏–π —à–∞–±–ª–æ–Ω:</b>
<code>{current_template}</code>

–û—Ç–ø—Ä–∞–≤—å—Ç–µ –Ω–æ–≤—ã–π —à–∞–±–ª–æ–Ω —Å–ª–µ–¥—É—é—â–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ–º.
–î–ª—è –æ—Ç–º–µ–Ω—ã –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ /cancel
    """
    
    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="‚ùå –û—Ç–º–µ–Ω–∞", callback_data="admin_prompt")]
    ])
    
    await callback.message.edit_text(text, reply_markup=keyboard)
    await state.set_state(AdminStates.waiting_for_response_template)

async def view_current_prompt(callback: CallbackQuery):
    """–ü–æ–∫–∞–∑–∞—Ç—å —Ç–µ–∫—É—â–∏–π –æ—Å–Ω–æ–≤–Ω–æ–π –ø—Ä–æ–º—Ç"""
    current_prompt = get_main_prompt()
    
    text = f"""
üìù <b>–¢–µ–∫—É—â–∏–π –æ—Å–Ω–æ–≤–Ω–æ–π –ø—Ä–æ–º—Ç</b>

<code>{current_prompt}</code>
    """
    
    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="‚úèÔ∏è –ò–∑–º–µ–Ω–∏—Ç—å", callback_data="admin_prompt_main")],
        [InlineKeyboardButton(text="üîô –ù–∞–∑–∞–¥", callback_data="admin_prompt")]
    ])
    
    await callback.message.edit_text(text, reply_markup=keyboard)

async def view_current_template(callback: CallbackQuery):
    """–ü–æ–∫–∞–∑–∞—Ç—å —Ç–µ–∫—É—â–∏–π —à–∞–±–ª–æ–Ω –æ—Ç–≤–µ—Ç–∞"""
    current_template = get_response_template()
    
    text = f"""
üìã <b>–¢–µ–∫—É—â–∏–π —à–∞–±–ª–æ–Ω –æ—Ç–≤–µ—Ç–∞</b>

<code>{current_template}</code>
    """
    
    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="‚úèÔ∏è –ò–∑–º–µ–Ω–∏—Ç—å", callback_data="admin_prompt_template")],
        [InlineKeyboardButton(text="üîô –ù–∞–∑–∞–¥", callback_data="admin_prompt")]
    ])
    
    await callback.message.edit_text(text, reply_markup=keyboard)

@router.message(AdminStates.waiting_for_main_prompt)
async def process_main_prompt(message: Message, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–æ–≤–æ–≥–æ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –ø—Ä–æ–º—Ç–∞"""
    if not is_admin(message.from_user.id):
        return
    
    new_prompt = message.text.strip()
    
    if save_main_prompt(new_prompt):
        keyboard = InlineKeyboardMarkup(inline_keyboard=[
            [InlineKeyboardButton(text="üîô –ö —É–ø—Ä–∞–≤–ª–µ–Ω–∏—é –ø—Ä–æ–º—Ç–æ–º", callback_data="admin_prompt")],
            [InlineKeyboardButton(text="üè† –í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="admin_back")]
        ])
        await message.answer("‚úÖ –û—Å–Ω–æ–≤–Ω–æ–π –ø—Ä–æ–º—Ç —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω!", reply_markup=keyboard)
        logger.info(f"–ê–¥–º–∏–Ω {message.from_user.id} –æ–±–Ω–æ–≤–∏–ª –æ—Å–Ω–æ–≤–Ω–æ–π –ø—Ä–æ–º—Ç")
    else:
        await message.answer("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –ø—Ä–æ–º—Ç–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.")
        logger.error(f"–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –ø—Ä–æ–º—Ç–∞ –æ—Ç –∞–¥–º–∏–Ω–∞ {message.from_user.id}")
    
    await state.clear()

@router.message(AdminStates.waiting_for_response_template)
async def process_response_template(message: Message, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–æ–≤–æ–≥–æ —à–∞–±–ª–æ–Ω–∞ –æ—Ç–≤–µ—Ç–∞"""
    if not is_admin(message.from_user.id):
        return
    
    new_template = message.text.strip()
    
    if save_response_template(new_template):
        keyboard = InlineKeyboardMarkup(inline_keyboard=[
            [InlineKeyboardButton(text="üîô –ö —É–ø—Ä–∞–≤–ª–µ–Ω–∏—é –ø—Ä–æ–º—Ç–æ–º", callback_data="admin_prompt")],
            [InlineKeyboardButton(text="üè† –í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="admin_back")]
        ])
        await message.answer("‚úÖ –®–∞–±–ª–æ–Ω –æ—Ç–≤–µ—Ç–∞ —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω!", reply_markup=keyboard)
        logger.info(f"–ê–¥–º–∏–Ω {message.from_user.id} –æ–±–Ω–æ–≤–∏–ª —à–∞–±–ª–æ–Ω –æ—Ç–≤–µ—Ç–∞")
    else:
        await message.answer("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ —à–∞–±–ª–æ–Ω–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.")
        logger.error(f"–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —à–∞–±–ª–æ–Ω–∞ –æ—Ç –∞–¥–º–∏–Ω–∞ {message.from_user.id}")
    
    await state.clear()

# --- –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å—É–º–º–∞—Ä–∏–∑–∞—Ü–∏–µ–π ---

async def show_analyze_menu(callback: CallbackQuery):
    """–ü–æ–∫–∞–∑–∞—Ç—å –º–µ–Ω—é —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—Ä–æ–º—Ç–∞–º–∏ –∞–Ω–∞–ª–∏–∑–∞ –∑–≤–æ–Ω–∫–æ–≤"""
    text = """
üîç <b>–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∞–Ω–∞–ª–∏–∑–æ–º –∑–≤–æ–Ω–∫–æ–≤</b>

–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø—Ä–æ–º–ø—Ç–æ–≤ –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ –∑–≤–æ–Ω–∫–æ–≤ —Å –≤–æ–¥–∏—Ç–µ–ª—è–º–∏.
–í—ã–±–µ—Ä–∏—Ç–µ —á—Ç–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å –∏–ª–∏ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å.
"""
    await callback.message.edit_text(text, reply_markup=get_analyze_menu_keyboard())

async def show_summary_menu(callback: CallbackQuery):
    """–ü–æ–∫–∞–∑–∞—Ç—å –º–µ–Ω—é —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—Ä–æ–º—Ç–∞–º–∏ —Å—É–º–º–∞—Ä–∏–∑–∞—Ü–∏–∏"""
    text = """
üë§ <b>–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª–µ–º –≤–æ–¥–∏—Ç–µ–ª—è</b>

–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø—Ä–æ–º–ø—Ç–æ–≤ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –ø—Ä–æ—Ñ–∏–ª—è –≤–æ–¥–∏—Ç–µ–ª—è –∏–∑ –∑–≤–æ–Ω–∫–æ–≤.
–í—ã–±–µ—Ä–∏—Ç–µ —á—Ç–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å –∏–ª–∏ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å.
"""
    await callback.message.edit_text(text, reply_markup=get_summary_menu_keyboard())

async def view_current_summary_prompt(callback: CallbackQuery):
    """–ü–æ–∫–∞–∑–∞—Ç—å —Ç–µ–∫—É—â–∏–π –ø—Ä–æ–º—Ç —Å—É–º–º–∞—Ä–∏–∑–∞—Ü–∏–∏"""
    current_prompt = get_summary_main_prompt()
    
    text = f"""
üìù <b>–¢–µ–∫—É—â–∏–π –ø—Ä–æ–º—Ç –¥–ª—è –ø—Ä–æ—Ñ–∏–ª—è –≤–æ–¥–∏—Ç–µ–ª—è</b>

<code>{current_prompt}</code>
    """
    
    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="‚úèÔ∏è –ò–∑–º–µ–Ω–∏—Ç—å", callback_data="admin_summary_prompt_main")],
        [InlineKeyboardButton(text="üîô –ù–∞–∑–∞–¥", callback_data="admin_summary_menu")]
    ])
    
    await callback.message.edit_text(text, reply_markup=keyboard)

async def view_current_summary_template(callback: CallbackQuery):
    """–ü–æ–∫–∞–∑–∞—Ç—å —Ç–µ–∫—É—â–∏–π —à–∞–±–ª–æ–Ω —Å—É–º–º–∞—Ä–∏–∑–∞—Ü–∏–∏"""
    current_template = get_summary_template()
    
    text = f"""
üìã <b>–¢–µ–∫—É—â–∏–π —à–∞–±–ª–æ–Ω –ø—Ä–æ—Ñ–∏–ª—è –≤–æ–¥–∏—Ç–µ–ª—è</b>

<code>{current_template}</code>
    """
    
    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="‚úèÔ∏è –ò–∑–º–µ–Ω–∏—Ç—å", callback_data="admin_summary_prompt_template")],
        [InlineKeyboardButton(text="üîô –ù–∞–∑–∞–¥", callback_data="admin_summary_menu")]
    ])
    
    await callback.message.edit_text(text, reply_markup=keyboard)

async def edit_summary_main_prompt(callback: CallbackQuery, state: FSMContext):
    """–ù–∞—á–∞—Ç—å —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–æ–º—Ç–∞ —Å—É–º–º–∞—Ä–∏–∑–∞—Ü–∏–∏"""
    current_prompt = get_summary_main_prompt()
    
    text = f"""
üìù <b>–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–æ–º—Ç–∞ –ø—Ä–æ—Ñ–∏–ª—è –≤–æ–¥–∏—Ç–µ–ª—è</b>

<b>–¢–µ–∫—É—â–∏–π –ø—Ä–æ–º—Ç:</b>
<code>{current_prompt}</code>

–û—Ç–ø—Ä–∞–≤—å—Ç–µ –Ω–æ–≤—ã–π –ø—Ä–æ–º—Ç —Å–ª–µ–¥—É—é—â–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ–º.
–î–ª—è –æ—Ç–º–µ–Ω—ã –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ /cancel
    """
    
    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="‚ùå –û—Ç–º–µ–Ω–∞", callback_data="admin_summary_menu")]
    ])
    
    await callback.message.edit_text(text, reply_markup=keyboard)
    await state.set_state(AdminStates.waiting_for_summary_main_prompt)

async def edit_summary_response_template(callback: CallbackQuery, state: FSMContext):
    """–ù–∞—á–∞—Ç—å —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —à–∞–±–ª–æ–Ω–∞ —Å—É–º–º–∞—Ä–∏–∑–∞—Ü–∏–∏"""
    current_template = get_summary_template()
    
    text = f"""
üìã <b>–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —à–∞–±–ª–æ–Ω–∞ –ø—Ä–æ—Ñ–∏–ª—è –≤–æ–¥–∏—Ç–µ–ª—è</b>

<b>–¢–µ–∫—É—â–∏–π —à–∞–±–ª–æ–Ω:</b>
<code>{current_template}</code>

–û—Ç–ø—Ä–∞–≤—å—Ç–µ –Ω–æ–≤—ã–π —à–∞–±–ª–æ–Ω —Å–ª–µ–¥—É—é—â–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ–º.
–î–ª—è –æ—Ç–º–µ–Ω—ã –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ /cancel
    """
    
    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="‚ùå –û—Ç–º–µ–Ω–∞", callback_data="admin_summary_menu")]
    ])
    
    await callback.message.edit_text(text, reply_markup=keyboard)
    await state.set_state(AdminStates.waiting_for_summary_template)

@router.message(AdminStates.waiting_for_summary_main_prompt)
async def process_summary_main_prompt(message: Message, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–æ–≤–æ–≥–æ –ø—Ä–æ–º—Ç–∞ —Å—É–º–º–∞—Ä–∏–∑–∞—Ü–∏–∏"""
    if not is_admin(message.from_user.id):
        return
    
    new_prompt = message.text.strip()
    
    if save_summary_main_prompt(new_prompt):
        keyboard = InlineKeyboardMarkup(inline_keyboard=[
            [InlineKeyboardButton(text="üîô –ö —É–ø—Ä–∞–≤–ª–µ–Ω–∏—é –ø—Ä–æ–º—Ç–∞–º–∏", callback_data="admin_summary_menu")],
            [InlineKeyboardButton(text="üè† –í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="admin_back")]
        ])
        await message.answer("‚úÖ –ü—Ä–æ–º—Ç –ø—Ä–æ—Ñ–∏–ª—è –≤–æ–¥–∏—Ç–µ–ª—è —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω!", reply_markup=keyboard)
        logger.info(f"–ê–¥–º–∏–Ω {message.from_user.id} –æ–±–Ω–æ–≤–∏–ª –ø—Ä–æ–º—Ç —Å—É–º–º–∞—Ä–∏–∑–∞—Ü–∏–∏")
    else:
        await message.answer("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –ø—Ä–æ–º—Ç–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.")
        logger.error(f"–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –ø—Ä–æ–º—Ç–∞ —Å—É–º–º–∞—Ä–∏–∑–∞—Ü–∏–∏ –æ—Ç –∞–¥–º–∏–Ω–∞ {message.from_user.id}")
    
    await state.clear()

@router.message(AdminStates.waiting_for_summary_template)
async def process_summary_template(message: Message, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–æ–≤–æ–≥–æ —à–∞–±–ª–æ–Ω–∞ —Å—É–º–º–∞—Ä–∏–∑–∞—Ü–∏–∏"""
    if not is_admin(message.from_user.id):
        return
    
    new_template = message.text.strip()
    
    if save_summary_template(new_template):
        keyboard = InlineKeyboardMarkup(inline_keyboard=[
            [InlineKeyboardButton(text="üîô –ö —É–ø—Ä–∞–≤–ª–µ–Ω–∏—é –ø—Ä–æ–º—Ç–∞–º–∏", callback_data="admin_summary_menu")],
            [InlineKeyboardButton(text="üè† –í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="admin_back")]
        ])
        await message.answer("‚úÖ –®–∞–±–ª–æ–Ω –ø—Ä–æ—Ñ–∏–ª—è –≤–æ–¥–∏—Ç–µ–ª—è —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω!", reply_markup=keyboard)
        logger.info(f"–ê–¥–º–∏–Ω {message.from_user.id} –æ–±–Ω–æ–≤–∏–ª —à–∞–±–ª–æ–Ω —Å—É–º–º–∞—Ä–∏–∑–∞—Ü–∏–∏")
    else:
        await message.answer("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ —à–∞–±–ª–æ–Ω–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.")
        logger.error(f"–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —à–∞–±–ª–æ–Ω–∞ —Å—É–º–º–∞—Ä–∏–∑–∞—Ü–∏–∏ –æ—Ç –∞–¥–º–∏–Ω–∞ {message.from_user.id}")
    
    await state.clear()

